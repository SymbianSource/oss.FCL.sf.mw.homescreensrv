/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for MCS plug-in settings
*
*/


#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <eikcore.rsg>
#include <eikon.rsg>
#include <appinfo.rh>
#include <avkon.loc>
#include <data_caging_paths_strings.hrh>
#include <gscommon.rh>
#include <gs.loc>

#include <mcspluginsettings.loc>

#include "mcspluginsettings.hrh"


NAME MCPS

RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf="MCPS"; }

//----------------------------------------------------
// EIK_APP_INFO
// Contains application information.
//----------------------------------------------------
//
RESOURCE EIK_APP_INFO
{
}

//----------------------------------------------------
// r_ai_mcs_settings_menubar
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_ai_mcs_settings_menubar
{
    titles =
    {
        MENU_TITLE { menu_pane = r_ai_mcs_settings_menupane; }
    };
}

//----------------------------------------------------
// r_ai_mcs_settings_menupane
// Options menu.
//----------------------------------------------------
//
RESOURCE MENU_PANE r_ai_mcs_settings_menupane
{
    items =
    {
        MENU_ITEM
        {
            command = EAiScutSettingsCmdChange;
            txt     = qtn_options_change;
            flags   = EEikMenuItemAction;
        }

#ifdef __SERIES60_HELP
        ,
        MENU_ITEM
        {
            command = EAknCmdHelp;
            txt     = qtn_options_help;
        }
#endif  // __SERIES60_HELP
        ,
        MENU_ITEM
        {
            command = EAknCmdExit;
            txt     = qtn_options_exit;
        }
    };
}

//----------------------------------------------------
// r_ai_mcs_settings_view
// Settings views.
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_ai_mcs_settings_view
{
    menubar = r_ai_mcs_settings_menubar;
    //cba = R_AVKON_SOFTKEYS_OPTIONS_BACK;
    cba = r_scut_softkeys_options_back_change;
}

//----------------------------------------------------
// r_ai_mcs_setting_listbox
// Common listbox editor resource for setting pages.
//----------------------------------------------------
//
RESOURCE LISTBOX r_ai_mcs_setting_listbox
{
    flags = EEikListBoxMultipleSelection;
}

//----------------------------------------------------
// r_ai_mcs__settings_applist_page
// Selection key idle softkey setting page.
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_ai_mcs_settings_applist_page
{
    number = EAknSettingPageNoOrdinalDisplayed;
    //    label = qtn_set_idle_selec_key;
    // note: default cba resource is ok_cancel_select
    //softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL;
    type = EAknSetListBox;
    editor_resource_id = r_ai_mcs_setting_listbox;
}

//----------------------------------------------------
// r_ai_mcs_change_to_page_lbx
// "Change To" setting page.
//----------------------------------------------------
//
RESOURCE ARRAY r_ai_mcs_change_to_page_lbx
{
    items =
    {
        LBUF { txt = qtn_ai_mcs_set_change_apps;     },
        LBUF { txt = qtn_ai_mcs_set_change_bookmark; }
        
        // Only this menu option disabled.
        // The implementation of url functionality still exists in code, 
        // even though this option has been decided to remove due to better
        // usability. Affects lots of code if removed entirely.
        /*,
        LBUF { txt = qtn_ai_mcs_set_change_url;    }*/
    };
}

//----------------------------------------------------
// r_ai_mcs_listquery_change_to_page
// "Change To" setting page.
//----------------------------------------------------
//
RESOURCE AVKON_LIST_QUERY r_ai_mcs_listquery_change_to_page
{
    softkeys=R_AVKON_SOFTKEYS_SELECT_CANCEL;
    items =
    {
        AVKON_LIST_QUERY_DLG_LINE
        {
            control = AVKON_LIST_QUERY_CONTROL
            {
                listtype = EAknCtSinglePopupMenuListBox;
                heading = qtn_ai_mcs_set_change_prompt;
                listbox = AVKON_LIST_QUERY_LIST
                {
                    // array of items will be defined dynamically
                };
            };
        }
    };
}

//----------------------------------------------------
// r_ai_mcs_settings_view_caption
// View caption for plug-in. max 256
//----------------------------------------------------
//
RESOURCE TBUF r_ai_mcs_settings_view_caption
{
    buf = qtn_ai_mcs_set_pers_shortcuts;
}

//----------------------------------------------------
// r_ai_mcs_settings_view_title
// View title.
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_ai_mcs_settings_view_title
{
    txt = qtn_ai_mcs_set_title_pers_shortcuts;
}

//----------------------------------------------------
//  r_ai_mcs_settings_txt_fixed_item
//  Text used in information note when attempting
//  to change a read-only shortcut
//----------------------------------------------------
//
RESOURCE TBUF r_ai_mcs_settings_txt_fixed_item
{
    buf = qtn_ai_mcs_set_app_note_fixed;
}

//----------------------------------------------------
//  r_ai_mcs_settings_txt_all_fixed
//  Text for empty listbox item
//----------------------------------------------------
//
RESOURCE TBUF r_ai_mcs_settings_txt_all_fixed
{
    buf = qtn_ai_mcs_set_all_fixed;
}

//----------------------------------------------------
//  r_ai_mcs_settings_txt_linkn
//
//----------------------------------------------------
//
RESOURCE TBUF r_ai_mcs_settings_txt_linkn
{
    buf = qtn_ai_mcs_set_myt_linkn;
}


// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_scut_softkeys_options_back_change
{
    buttons =
    {
        CBA_BUTTON {id = EAknSoftkeyOptions;       txt = text_softkey_option; },
        CBA_BUTTON {id = EAknSoftkeyBack;          txt = text_softkey_back;   },
        CBA_BUTTON {id = EAiScutSettingsCmdChange; txt = qtn_msk_change;      }
    };
}

// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_scut_softkeys_options_exit_change
{
    buttons =
    {
        CBA_BUTTON {id = EAknSoftkeyOptions;       txt = text_softkey_option; },
        CBA_BUTTON {id = EAknSoftkeyExit;          txt = text_softkey_exit;   },
        CBA_BUTTON {id = EAiScutSettingsCmdChange; txt = qtn_msk_change;      }
    };
}

// End of File.
